version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ecommerce_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce
    volumes:
      - mongodb_data:/data/db
      - ./server/seeds:/docker-entrypoint-initdb.d
    networks:
      - ecommerce_network

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ecommerce_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      JWT_EXPIRES_IN: 7d
      CLIENT_URL: http://localhost:3000
    depends_on:
      - mongodb
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - ecommerce_network

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ecommerce_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_STRIPE_PUBLISHABLE_KEY: pk_test_placeholder
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - ecommerce_network

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce_network

volumes:
  mongodb_data:
  redis_data:

networks:
  ecommerce_network:
    driver: bridge